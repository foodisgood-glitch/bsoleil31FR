--https://www.roblox.com/games/4859936288/Clicker-Story-NEW?refPageId=220f508c-2954-4ca2-81e9-43452fa0e245



local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/preztel/AzureLibrary/master/uilib.lua", true))()

local AutoTab = Library:CreateTab("Clicker Story GUI","things", true)
local Rebirth = Library:CreateTab("Auto Rebirth","things", true)
local eggs = Library:CreateTab("Auto Buy Eggs","things", true)
local teleports = Library:CreateTab("Teleports","things", true)
local Upgrades = Library:CreateTab("Upgrades","things", true)
local credits = Library:CreateTab("Credits","things", true)

credits:CreateButton("Our Discords", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("masterkyllian#1723", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/Sr8exX4", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("bsoleil31FR[inchala ptn]#9001", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("https://discord.gg/PdUTrVG", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

credits:CreateButton("Big C#5347", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:nothing()
end)

eggs:CreateToggle("Auto Evolve All pets", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "All",
}

game:GetService("ReplicatedStorage").Remotes.Pets.EvolvePet:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

eggs:CreateToggle("Auto Buy 500 Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = "Basic Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

eggs:CreateToggle("Auto Buy 50K Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Uncommon Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

eggs:CreateToggle("Auto Buy 5M Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Beach Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

eggs:CreateToggle("Auto Buy 50b Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Frost Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

eggs:CreateToggle("Auto Buy 500T Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Mystic Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

eggs:CreateToggle("Auto Buy 5Q Eggs", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = "Storm Egg",
    [2] = 1,
}

game:GetService("ReplicatedStorage").Remotes.OpenEgg:InvokeServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Speed Hack 100", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateToggle("Auto Clicker", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            game:GetService("ReplicatedStorage").Remotes.Click:FireServer()
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x1", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
            local args = {
    [1] = 1,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x10", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
           local args = {
    [1] = 10,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x50", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
          local args = {
    [1] = 50,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x100", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 100,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x500", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 500,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x1k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 1000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x10k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 10000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x100k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 100000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x500k", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 500000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x1M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 1000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x2.25M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 2250000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x5M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 5000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x20M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 20000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x200M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 200000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x750M", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 750000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x1,5B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 1500000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x5B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 5000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Rebirth:CreateToggle("Auto Rebirth x50B", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 50000000000,
}

game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Upgrades:CreateToggle("AutoBuy Speed", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 1,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Upgrades:CreateToggle("AutoBuy Rebirths", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 2,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Upgrades:CreateToggle("AutoBuy Pet Inventory", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 3,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Upgrades:CreateToggle("AutoBuy Gem Multiplier", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 4,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Upgrades:CreateToggle("AutoBuy Free Auto Clicker", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 5,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Upgrades:CreateToggle("AutoBuy Faster Auto Clicker", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 6,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Upgrades:CreateToggle("AutoBuy Faster Hatching", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 7,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Upgrades:CreateToggle("AutoBuy x2 Clicks Chance", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 8,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Upgrades:CreateToggle("AutoBuy More Luck", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 9,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

Upgrades:CreateToggle("AutoBuy Pets Equipped", function(arg) --the (arg) is if the checkbox is toggled or not
    if arg then
        _G.Basic = true 
        while wait(0) and _G.Basic do
       local args = {
    [1] = 10,
    [2] = true
}

game:GetService("ReplicatedStorage").Remotes.Shop.BuyUpgrade:FireServer(unpack(args))
        end
    else
        _G.Basic = false
    end
end)

AutoTab:CreateButton("Destroy Gui :D", function() --you dont need "arg" for a button
game:GetService("CoreGui").uiui:Destroy()
end)

teleports:CreateButton("Spawn", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-17.423708, -71.6430817, 553.642273)
end)

teleports:CreateButton("Summer World", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-729.158081, -71.643074, 1704.77795)
end)

teleports:CreateButton("Winter World", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-1072.09729, -71.008194, -798.221069)
end)

teleports:CreateButton("Mystic World", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-1141.41724, -71.008194, 551.978943)
end)

teleports:CreateButton("Storm World", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-1156.88757, -71.6431274, -1639.63904)
end)

teleports:CreateButton("Boss", function() --you dont need "arg" for a button
game.Players.LocalPlayer.character.HumanoidRootPart.CFrame = CFrame.new(-53.6902809, -54.268528, -263.553345)
end)

--| Anti AFK | By Altix#3395
    local Virtual = game:service'VirtualUser'
    game:service'Players'.LocalPlayer.Idled:connect(function()
        Virtual:CaptureController()
        Virtual:ClickButton2(Vector2.new())
        wait(2)
    end)